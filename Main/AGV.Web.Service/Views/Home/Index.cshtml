@{
    ViewBag.Title = "AGV订单监控";
}


<div ng-controller="mainController">
    <div class="row" style="margin-top:10px">
        <div class="col-md-12">
            <button type="button" style="margin-right:10px;margin-top:5px" ng-repeat="x in main.MapData" ng-class="x.active" class="btn btn-default" ng-click="main.mapClick(x)">{{x.id}}</button>

        </div>

    </div>
    <div class="row" style="margin-top:30px;text-align:center">
        <div class="col-md-12">
            <button type="button" class="btn btn-primary" ng-click="main.sendTask()">发送订单</button>
            <button type="button" class="btn btn-info" ng-click="main.queryWait()">查询所有等待信号</button>
            <button type="button" class="btn btn-danger" ng-click="main.clearWait()">释放所有等待信号</button>
            <button type="button" class="btn btn-danger" ng-click="main.clearAgvOrder()">清除AGV订单</button>

        </div>
    </div>


    <div class="row" style="margin-top:10px">
        <div class="col-md-12">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>

                        <th>站点名称</th>
                        <th>等待点</th>
                        <th>到达通知</th>

                        <th>操作</th>
                        <th>信号</th>

                    </tr>
                </thead>
                <tbody>


                    <tr ng-repeat="x in main.tableNodes">
                        <td><span class="label label-info">{{ x.Station }}</span></td>
                        <td>
                            <span class="label label-success" ng-show="x.IsRequiredWait">{{ x.IsRequiredWait }}</span>
                            <span ng-show="!x.IsRequiredWait">{{ x.IsRequiredWait }}</span>
                        </td>
                        <td>
                            <span class="label label-success" ng-show="x.ArrivalNotice">{{ x.ArrivalNotice }}</span>
                            <span ng-show="!x.ArrivalNotice">{{ x.ArrivalNotice }}</span>

                        </td>
                        <td>{{ x.Operation }}</td>
                        <td><span class="label label-primary">{{ x.Signal }}</span></td>
                    </tr>
                </tbody>
            </table>
        </div>

    </div>
    <div class="row" style="margin-top:10px" ng-show="main.isShowWaitInfo">
        <div class="alert alert-info alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Wait!</strong>
            <span ng-repeat="x in main.waitNodes" style="margin-right:10px;">
                【 <span class="label label-info">{{ x.name }}</span>
                <span class="label label-primary" ng-show="x.value">{{ x.value }}</span>
                <span class="label label-danger" ng-show="!x.value">{{ x.value }}</span>
                】
            </span>

        </div>
    </div>
    <div class="row" style="margin-top:10px">
        <div class="col-md-7">
            <table class="table table-bordered table-hover" style="max-height:600px;overflow-y:auto">
                <thead>
                    <tr>

                        <th style="width:230px">订单名称</th>
                        <th style="width:80px">类型</th>


                        <th style="width:100px">订单状态</th>
                        <th>创建时间</th>
                        <th style="width:80px">订单用时</th>
                        <th style="width:100px">机器人</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody>


                    <tr ng-repeat="x in main.orderNodes" ng-class="x.className">
                        <td style="width:230px">{{ x.name }}</td>
                        <td>{{ x.category }}</td>
                        <td ng-show="x.state=='FINISHED'">
                            <span class="label label-success">{{ x.state }}</span>
                        </td>
                        <td ng-show="x.state!='FINISHED'">
                            {{ x.state }}
                        </td>
                        <td>{{x.time}}</td>
                        <td>{{x.durtionTime}}(秒)</td>
                        <td>{{ x.processingVehicle }}</td>

                        <td>
                            <button type="button" class="btn btn-primary" ng-click="main.orderView(x)">详情</button>
                            @*<button type="button" style="margin-left:5px" class="btn btn-info" ng-click="main.refreshOrder(x.name)">刷新</button>*@

                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="col-md-5">
            <table class="table table-bordered table-hover">
                <thead>
                    <tr>

                        <th>工作站</th>
                        <th>动作</th>
                        <th>状态</th>
                        <th>元数据</th>
                        <th style="width:50px">操作</th>

                    </tr>
                </thead>
                <tbody>


                    <tr ng-repeat="x in main.destinations">
                        <td>{{ x.locationName }}</td>
                        <td><span class="label label-info">{{ x.operation }}</span></td>
                        <td ng-show="x.state=='FINISHED'">
                            <span class="label label-success">{{ x.state }}</span>
                        </td>
                        <td ng-show="x.state!='FINISHED'">
                            {{ x.state }}
                        </td>
                        <td>
                            <p ng-repeat="p in x.properties">
                                <span>{{p.key}}</span>
                                <span class="label label-info">{{ p.value }}</span>
                            </p>
                        </td>
                        <td>
                            <button type="button" ng-show="x.properties.length>0&&x.properties[0].key=='device:queryAtExecuted'" class="btn btn-primary" ng-click="main.sendWait($index)">释放信号</button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <div class="row" style="margin-top:10px" ng-show="main.isShowError">
        <div class="alert alert-danger alert-dismissible" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <strong>Error!</strong>
            <p>{{main.errorInfo}}</p>
            <p>{{main.errorJson}}</p>

        </div>
    </div>

    <div class="row" style="margin-top:10px" ng-show="main.signlrNodes.length>0">
        <div class="alert alert-info alert-dismissible" role="alert" style="overflow-y:auto">
            <div style="float:left;margin-right:10px;" ng-repeat="x in main.signlrNodes">
                <span class="label label-success">
                    {{x}}
                </span>

            </div>


        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">

        angular.module('todoApp', [])
            .controller('mainController', function ($scope) {
                var main = this;
                main.MapData = [];
                main.selectedName = '';
                main.tableNodes = [];
                main.orderNodes = [];
                main.errorInfo = '';
                main.errorJson = '';
                main.signlrNodes = [];
                main.isShowError = false;
                main.isShowWaitInfo = false;
                main.client = null;
                main.maxIndex = 1;
                main.destinations = [];
                main.currentOrder = null;
                main.waitNodes = [];
                main.init = function () {
                    main.client = $.connection.noticeHub; // Get a reference to the hub
                    $(function () {
                        $.connection.hub.start();

                    });

                    main.client.client.getAllAgvOrder = function (message) { // Register for incoming messages
                        main.MapData = [];
                        for (var c in message) {

                            main.MapData.push({ id: c, nodes: message[c], active: ' btn-default' });
                        }
                        main.MapData.sort(function (a, b) {
                            var arr = ["RAWIN", "EMPTYIN", "EMPTYOUT", "FINOUT"];
                            var aTag = a.id.split('_');
                            var bTag = b.id.split('_');
                            var aIndex = parseInt(aTag[0].replace("RX", ""), 10) * 10 + arr.indexOf(aTag[1]);
                            var bIndex = parseInt(bTag[0].replace("RX", ""), 10) * 10 + arr.indexOf(bTag[1]);

                            return aIndex - bIndex;
                        });
                        main.MapData[0].active = 'btn-primary';
                        main.selectedName = main.MapData[0].id;
                        main.tableNodes = main.MapData[0].nodes;
                        $scope.$apply();
                        main.client.server.loadAllOrder();
                    };
                    main.client.client.queryOrder = function (id) {
                        main.client.server.loadOrderProxy(id);
                    };
                    main.client.client.loadWaitSignal = function (message) {
                        main.waitNodes = [];
                        for (var c in message) {

                            main.waitNodes.push({ name: c, value: message[c] });
                        }
                        $scope.$apply();
                    };
                    main.client.client.pushSystemMessage = function (message, obj) {
                        main.isShowError = true;
                        main.errorInfo = message;
                        main.errorJson = JSON.stringify(obj);
                        $scope.$apply();

                    };
                    main.client.client.agvOrderArrived = function (id) {
                        angular.forEach(main.orderNodes, function (item) {
                            if (id.toString().indexOf(item.name) != -1) {
                                item.category = "Arrived";
                                order.durtionTime = moment().diff(moment(order.time), 's');
                            }
                        });
                        $scope.$apply();
                    };
                    main.client.client.agvSignalChange = function (id) {
                        main.signlrNodes.push("【" + main.maxIndex + "】" + id);
                        main.maxIndex++;
                        $scope.$apply();
                    };
                    main.client.client.getCurrentOrder = function (order) {
                        var isFind = false;
                        angular.forEach(main.orderNodes, function (item) {
                            if (item.name === order.name) {
                                item.category = order.category;
                                item.state = order.state;
                                item.processingVehicle = order.processingVehicle;
                                item.state = order.state;
                                item.durtionTime = moment().diff(moment(item.time), 's');

                                for (var c in item.destinations) {
                                    item.destinations[c].state = order.destinations[c].state;

                                }


                                isFind = true;
                            }
                        });
                        if (!isFind) {
                            order.time = moment().format("YYYY-MM-DD HH:mm:ss");
                            order.durtionTime = 0;
                            main.destinations = order.destinations;
                            main.currentOrder = order;
                            main.orderNodes.unshift(order);
                        }
                        $scope.$apply();

                    };
                }
                main.selectChange = function () {
                    angular.forEach(main.MapData, function (item) {
                        if (item.id === main.selectedName) {
                            main.tableNodes = item.nodes;

                        }
                    });

                };
                main.mapClick = function (node) {
                    angular.forEach(main.MapData, function (item) {

                        item.active = "btn-default";
                    });
                    main.selectedName = node.id;

                    node.active = "btn-primary";
                    main.selectChange();
                };
                main.clearWait = function () {
                    main.client.server.clearAllWaitSignal();


                };
                main.sendWait = function (index) {
                    var station = main.destinations[index + 1].locationName;
                    var id = main.currentOrder.name;

                    var arr = id.split('_');
                    main.isShowError = false;
                    main.client.server.sendWaitEndSignal(arr[0] + '_' + arr[1] + station);

                };
                main.refreshOrder = function (name) {
                    main.client.server.loadOrderProxy(name);
                    main.isShowError = false;

                };
                main.sendTask = function () {
                    main.isShowError = false;
                    main.client.server.sendTask(main.selectedName);
                };
                main.orderView = function (order) {
                    angular.forEach(main.orderNodes, function (item) {
                        item.className = "";
                    });
                    order.className = "info";
                    main.destinations = order.destinations;
                    main.currentOrder = order;
                    main.refreshOrder(order.name);
                };
                main.queryWait = function () {
                    main.isShowWaitInfo = true;
                    main.client.server.queryWaitSignal();

                };
                main.clearAgvOrder = function () {
                    main.client.server.clearAgvOrder();
                    main.orderNodes = [];
                };
                main.init();
                $scope.main = main;
            });

    </script>
}